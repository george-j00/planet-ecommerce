<div id="orders" class="contents">
  <h2 class="text-center"><strong>Order Management</strong></h2>
  <div class="container">
    <form class="form-inline d-flex mb-3" onsubmit="searchOrders(); return false;">
      <input class="form-control mr-2 w-25 d-flex justify-content-center" type="search" placeholder="Search by Order Id" aria-label="Search" id="searchInput">
      <button class="btn btn-dark" id="searchBtn" type="submit">Search</button>
      <button class="btn btn-light ml-5" id="sortBtn">Sort</button>
    </form>
    

    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th>Order ID</th>
            <th>Product ID/ID's</th>
            <th>Order Date</th>
            <th>Status</th>
            <th>Amount</th>
            <th></th>
          </tr>
        </thead>
        <tbody id="orderTableBody">
        <% if (orders && orders.length > 0) { %>
          <% orders.forEach(order => { %>
            <tr>
             
              <td><%= order._id.toString().substr(15) %></td>

              <td>
                <ul class="list-unstyled">
                  <% order.items.forEach(item => { %>
                    <li><%= item.productId._id.toString().substr(15) %></li>
                  <% }); %>
                </ul>
              </td>

              <!-- Display Formatted Order Date -->
              <td><%= order.createdOn.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' }) %></td>

              <!-- Display Order Status -->
              <td>
                <% if (order.status === 'Pending') { %>
                  <span class="badge badge-warning"><%= order.status %></span>
                <% } else if (order.status === 'Shipped') { %>
                  <span class="badge badge-primary"><%= order.status %></span>
                <% } else if (order.status === 'Placed') { %>
                  <span class="badge badge-info"><%= order.status %></span>
                <% } else if (order.status === 'Delivered') { %>
                  <span class="badge badge-success"><%= order.status %></span>
                <% } else { %>
                  <span class="badge badge-secondary"><%= order.status %></span>
                <% } %>

                <div class="btn-group dropright">
                  <button type="button" class="btn btn-light btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fa-solid fa-pen-to-square" style="color: #f0a400;"></i>
                  </button>
                  <div class="dropdown-menu">
                    <a class="dropdown-item update-status" href="#" data-order-id="<%= order._id %>" data-status="Shipped">Shipped</a>
                    <a class="dropdown-item update-status" href="#" data-order-id="<%= order._id %>" data-status="Delivered">Delivered</a>
                  </div>
                </div>
              </td>
              <td><span>&#8377</span> <%= order.totalAmount %></td>
              <td><button class="btn btn-sm btn-outline-secondary" onclick="openModal('<%= order._id %>', 'admin')">View Order</button></td>

            </tr>

            <div class="modal fade" id="adminViewOrderModal<%= order._id %>" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
              <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Order Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                  </div>
                </div>
              </div>
            </div>
          <% }); %>
          <% } else { %>
            <tr>
              <td colspan="7">No orders to display</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <!-- pagination -->
    <nav aria-label="Page navigation">
      <ul class="pagination justify-content-center">
        <% if (currentPage > 1) { %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
              <span aria-hidden="true">&laquo;</span>
              <span class="sr-only">Previous</span>
            </a>
          </li>
        <% } %>
        <li class="page-item disabled">
          <span class="page-link">Page <%= currentPage %> of <%= totalOrderPages %></span>
        </li>
        <% if (currentPage < totalOrderPages) { %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
              <span aria-hidden="true">&raquo;</span>
              <span class="sr-only">Next</span>
            </a>
          </li>
        <% } %>
      </ul>
    </nav>
  </div>
</div>

<script>
let currentPage = 1; // Initialize current page
let totalOrderPages = 1; // Initialize total pages
let sortButtonClicked = false; 
// function changePage(newPage) {
//   if (newPage >= 1 && newPage <= totalOrderPages) {
//     currentPage = newPage;
//     searchOrders(); // Re-run the search with the updated page number
//   }
// }

const changePage = (newPage) => {
  if (newPage >= 1 && newPage <= totalOrderPages) {
    const url = `/admin/search-orders?searchInput=${encodeURIComponent(searchInput)}&page=${newPage}`;
    fetch(url)
      .then(response => response.json())
      .then(data => {
        // Update the pagination UI with the new results
        const pagination = document.querySelector('.pagination');
        pagination.innerHTML = '';

        if (newPage > 1) {
          const prevPage = document.createElement('li');
          prevPage.innerHTML = `
            <a class="page-link" href="#" onclick="changePage(${newPage - 1})" aria-label="Previous">
              <span aria-hidden="true">&laquo;</span>
              <span class="sr-only">Previous</span>
            </a>
          `;
          pagination.appendChild(prevPage);
        }

        pagination.innerHTML += `
          <li class="page-item disabled">
            <span class="page-link">Page ${newPage} of ${data.totalOrderPages}</span>
          </li>
        `;

        if (newPage < data.totalOrderPages) {
          const nextPage = document.createElement('li');
          nextPage.innerHTML = `
            <a class="page-link" href="#" onclick="changePage(${newPage + 1})" aria-label="Next">
              <span aria-hidden="true">&raquo;</span>
              <span class="sr-only">Next</span>
            </a>
          `;
          pagination.appendChild(nextPage);
        }
      })
      .catch(error => console.log(error));
  }
};

function getStatusBadgeClass(orderStatus) {
  switch (orderStatus) {
    case 'Pending':
      return 'warning';
    case 'Shipped':
      return 'primary';
    case 'Placed':
      return 'info';
    case 'Delivered':
      return 'success';
    default:
      return 'secondary';
  }
}

  const sortButton = document.getElementById('sortBtn');
  sortButton.addEventListener('click', function () {
    sortButtonClicked = true; // Set to true when the "Sort" button is clicked
    searchOrders();
  });

// Event listener for the "Search" button
  const searchButton = document.getElementById('searchBtn');
  searchButton.addEventListener('click', function () {
    sortButtonClicked = false; // Set to false when the "Search" button is clicked
    searchOrders();
});

  async function searchOrders() {
    const searchInput = document.getElementById('searchInput').value;
    // const sortButtonClicked = document.getElementById('sortBtn').value === 'true';

    try {

      let apiUrl = `/admin/search-orders?searchInput=${encodeURIComponent(searchInput)}`;

      if (sortButtonClicked) {
        // If the "Sort" button was clicked, modify the API URL accordingly
        apiUrl += '&sort=totalAmount'; // For example, sorting by totalAmount
      }

      const response = await fetch(apiUrl, {
        method: 'GET',
      });

      if (!response.ok) {
        console.log('Error on response');
        return;
      }
      
      const data = await response.json();
      const results = data.results;
      totalOrderPages = Math.ceil(results.length / 6);
      console.log(results , 'this is resulttss');
      
  //     const totalPages = data.totalPages;

  //     console.log(results, 'this is a GET request');
  //     // Bind the results variable to the tbody element
      const tableBody = document.getElementById('orderTableBody');
      tableBody.innerHTML = '';
      attachUpdateStatusEventListeners();
      results.forEach(order => {
        const row = `
        <tr>
            
          <td>${order._id.substring(15)}</td>
          <td>${order.user.substring(15)}</td>
          <td>
            <ul class="list-unstyled">
              ${order.items.map(item => `<li>${item.productId.substring(15)}</li>`).join('')}
            </ul>
          </td>
          <td>${new Date(order.createdOn).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}</td>
          <td class="status-cell">
          <span class="badge badge-${getStatusBadgeClass(order.status)}">${order.status}</span>
          <div class="btn-group dropright">
          <button type="button" class="btn btn-light btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="fa-solid fa-pen-to-square" style="color: #f0a400;"></i>
          </button>
          <div class="dropdown-menu">
            <a class="dropdown-item update-status" href="#" data-order-id="${order._id}" data-status="Shipped">Shipped</a>
            <a class="dropdown-item update-status" href="#" data-order-id="${order._id}" data-status="Delivered">Delivered</a>
          </div>
            </div>
          </td>
          <td><span>&#8377</span>${order.totalAmount}</td>
          <td><button class="btn btn-sm btn-outline-danger" onclick="openModal('${order._id}')">View Order</button></td>
        </tr>
        `;
        tableBody.innerHTML += row;
      });
      attachUpdateStatusEventListeners();

      const pagination = document.querySelector('.pagination');
      pagination.innerHTML = '';

      if (currentPage > 1) {
        const prevPage = document.createElement('li');
        prevPage.innerHTML = `
          <a class="page-link" href="#" onclick="changePage(${currentPage - 1})" aria-label="Previous">
            <span aria-hidden="true">&laquo;</span>
            <span class="sr-only">Previous</span>
          </a>
        `;
        pagination.appendChild(prevPage);
      }

      pagination.innerHTML += `
        <li class="page-item disabled">
          <span class="page-link">Page ${currentPage} of ${totalOrderPages}</span>
        </li>
      `;

      if (currentPage < totalOrderPages) {
        const nextPage = document.createElement('li');
        nextPage.innerHTML = `
          <a class="page-link" href="#" onclick="changePage(${currentPage + 1})" aria-label="Next">
            <span aria-hidden="true">&raquo;</span>
            <span class="sr-only">Next</span>
          </a>
        `;
        pagination.appendChild(nextPage);
      }


    } catch (error) {
      console.log(error, ' : error on searchOrders function');
    }
  }

</script>
<script src="../js/adminOrder.js"></script>
